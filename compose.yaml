services:
  client: 
    build:
      context: ./client
    environment:
      NODE_ENV: production
      SERVER_URL: ${SERVER_URL:-http://localhost:4000}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:4000/api/v1/ws}
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    depends_on:
      server:
        condition: service_healthy

  server:
    build:
      context: ./server
      target: final
    ports:
      - "4000:4000"
    environment:
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASS:-change_this_password}
      DB_NAME: ${DB_NAME:-football}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      JWT_EXPIRES_HOURS: ${JWT_EXPIRES_HOURS:-24}
      FOOTBALL_API_TOKEN: ${FOOTBALL_API_TOKEN}
      FOOTBALL_API_URL: ${FOOTBALL_API_URL:-https://api.football-data.org/v4}
      SERVER_PORT: ${SERVER_PORT:-4000}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_FROM: ${MAILGUN_FROM}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_FROM_PHONE: ${TWILIO_FROM_PHONE}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:18-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-football}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-change_this_password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-football}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data: